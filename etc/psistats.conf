###############################################################################
# GENERAL CONFIGURATION                                                       #
###############################################################################
# RabbitMQ Server
# 
# The format is a URL:
# amqp://[username]:[password]@[hostname]:[port]/[vhost]
#
# If using pika v0.9.13 or lower (Ubuntu 14.01's python-pika package is at
# this version) then you must add %2f to the end of your URL if you have
# no virtual host
#
# example:
# amqp://guest:guest@localhost:5672/%2f
[server]
url=amqp://guest:guest@psikon.com:5672/%2f

###############################################################################
# REPORTERS CONFIGURATION                                                     #
###############################################################################
# Sensors Reporter
#
# Requires libsensors3 or higher to be installed
#
# Choose which sensors you want to broadcast. 
#
# You can also configure a label for each sensor. Check out the following
# examples:
#
# Without labels:
# devices[] = coretemp-isa-0000.Core 0
#             coretemp-isa-0000.Core 1
#
# With labels:
# devices[] = (CPU Core 1, coretemp-isa-0000.Core 0)
#             (Laptop Fan, thinkpad-isa-0000.fan1)
#
# The setting format is [chip].[feature]
#
# For list of available sensors run:
#
# psistats sensors
#
# If you start to notice any performance issues from psistats,
# try raising the interval
#
# enabled      - Enable sensors
# interval     - Interval to relay information from sensors.
# devices[]    - List of devices - [chip].[feature]
[sensors]
enabled=1
interval=1
devices[] = (CPU Core 1, coretemp-isa-0000.Core 0)
            (CPU Core 2, coretemp-isa-0000.Core 1)
            (CPU Core 3, coretemp-isa-0000.Core 2)
            (CPU Core 4, coretemp-isa-0000.Core 3)

# HDD Temp monitoring
#
# In order to use this feature, you must have hddtemp installed and
# running as a daemon. The daemon must start as the root user on most
# systems.
#
# enabled   - Enable HDD Temp monitoring. Will start an hddtemp daemon
# interval  - Interval in seconds
# hostname  - Hostname or IP address of the hddtemp server
# port      - Port number of the hddtemp server
[hddtemp]
enabled=0
interval=30
hostname=127.0.0.1
port=7634

# HDD Size monitoring
#
# enabled   - Enable HDD size monitoring
# interval  - Interval in seconds
[hddspace]
enabled=1
interval=60

# IP Address monitoring
#
# enabled   - Enable IP address reporting
# interval  - Interval in seconds
# devices[] - List of network devices to report
[ipaddr]
enabled=1
interval=120

# Memory reporting
#
# enabled   - Enable memory reporting
# interval  - Interval in seconds
[mem]
enabled=1
interval=2

# CPU Reporting
#
# enabled   - Enable CPU usage reporting
# percpu    - If true, show usage per CPU core
# interval  - Interval in seconds
[cpu]
enabled=1
percpu=1
interval=2

# Update reporting
#
# enabled   - Enable uptime reporting
# interval  - Interval in seconds
[uptime]
enabled=1
interval=1


###############################################################################
# LOGGING SETTINGS                                                            #
###############################################################################
# Logging configuration follows the python standard. Visit the documentation
# for more infromation on how to configure logging.
#
# https://docs.python.org/2/library/logging.config.html#configuration-file-format
#
[logging]
keys=root

[handlers]
keys=stdout,fileout

[formatters]
keys=form1

[logger_pika]
level=DEBUG
handlers=fileout,stdout
propagate=0
qualname=pika

[logger_root]
level=DEBUG
handlers=fileout,stdout
propagate=0
qualname=psistats

[handler_fileout]
class=logging.handlers.TimedRotatingFileHandler
filename=psistats.log
when=midnight
level=INFO
formatter=form1

[handler_stdout]
class=logging.StreamHandler
level=DEBUG
formatter=form1
stream=ext://sys.stdout

[formatter_form1]
format=%(asctime)s %(name)s %(levelname)s %(message)s
class=logging.Formatter

 
###############################################################################
# ADVANCED SETTINGS                                                           #
###############################################################################
# Queue Settings
#
# Configure the RabbitMQ Queue
# prefix     - What to prefix the queue name with. Queue names follow the format
#             [prefix].[hostname]
# exclusive  - If true, prevents other clients from binding to this queue
# durable    - If true, this queue will be recreated after a server restart
# autodelete - If true, queue is deleted when there are no more messages
# ttl        - Time in milliseconds to keep a message
[queue]
prefix=psistats
exclusive=False
durable=False
autodelete=Yes
ttl=10000

# Exchange Settings
#
# Configure the RabbitMQ Exchange. Note that ALL psistats clients must
# use the same exchange settings!
#
# name       - Exchange name
# type       - What kind of exchange to use. You'll probably want to keep this
#              as "topic". Psistats has not been tested with anything else
# durable    - The exchange will be recreated after a server restart
# autodelete - The exchange is deleted when all queues have stopped using it
[exchange]
name=psistats
type=topic
durable=False
autodelete=False

# Enable hostname reporting
#
# WARNING: How will you identify which machine is reporting? turning this off
# will probably break display clients as they will rely on hostname as a
# unique identifier.
[hostname]
enabled=True

# Configure the application
#
# retry_timer    : Number of seconds to wait before trying to reconnect to
#                : RabbitMQ after an error
# pidfile        : Location of the pidfile
# pidfile_timeout: Number of seconds to wait for the pidfile to be written
# stdin_path     : Path for stdin stream
# stdout_path    : Path for stdout stream
# stderr_path    : path for stderr stream
[app]
retry_timer=5
pidfile=/var/run/psistats.pid
pidfile_timeout=5
stdin_path=/dev/null
stdout_path=/dev/null
stderr_path=/dev/null


